-- Crear tabla de usuarios
DROP TABLE IF EXISTS movies.movie_user;
DROP TABLE IF EXISTS movies.users;

CREATE TABLE movies.users (
                              user_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                              user_username VARCHAR(50) NOT NULL UNIQUE,
                              user_name VARCHAR(200) NOT NULL,
                              user_email VARCHAR(200) NOT NULL UNIQUE,
                              created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                              CONSTRAINT pk_users PRIMARY KEY (user_id)
);

-- Crear tabla de relación usuarios-películas
CREATE TABLE movies.movie_user (
                                   movie_user_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                   user_id INT NOT NULL,
                                   movie_id INT NOT NULL,
                                   rating DECIMAL(3,1) CHECK (rating >= 0 AND rating <= 10),
                                   opinion TEXT,
                                   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                   updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                   CONSTRAINT pk_movie_user PRIMARY KEY (movie_user_id),
                                   CONSTRAINT fk_mu_user FOREIGN KEY (user_id) REFERENCES movies.users (user_id) ON DELETE CASCADE,
                                   CONSTRAINT fk_mu_movie FOREIGN KEY (movie_id) REFERENCES movies.movie (movie_id) ON DELETE CASCADE,
                                   CONSTRAINT unique_user_movie UNIQUE (user_id, movie_id)
);

-- Índices para mejorar performance
CREATE INDEX idx_movie_user_user_id ON movies.movie_user(user_id);
CREATE INDEX idx_movie_user_movie_id ON movies.movie_user(movie_id);

-- Datos de ejemplo (opcional)
INSERT INTO movies.users (user_username, user_name, user_email) VALUES
                                                                    ('johndoe', 'John Doe', 'john@example.com'),
                                                                    ('janedoe', 'Jane Doe', 'jane@example.com'),
                                                                    ('moviefan', 'Movie Fan', 'fan@example.com');

-- Comentarios sobre las tablas
COMMENT ON TABLE movies.users IS 'Tabla de usuarios del sistema';
COMMENT ON TABLE movies.movie_user IS 'Relación entre usuarios y películas con rating y opinión';
COMMENT ON COLUMN movies.movie_user.rating IS 'Puntuación del usuario para la película (0-10)';
COMMENT ON COLUMN movies.movie_user.opinion IS 'Opinión o reseña del usuario sobre la película';